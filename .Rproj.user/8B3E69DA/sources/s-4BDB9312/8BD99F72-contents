
PCRegression <- function(serie, tp, sl, h, uniqueBUYs = TRUE){
  
  # Create class
  if(uniqueBUYs){
    
    data <- predict_tp(serie, tp, sl, h) %>% 
      mutate(aux = ifelse(class == lag(class), 1, 0),
             class_2 = factor(ifelse(aux == 0 & class == 'buy', 'buy', 'stay'))) %>% 
      select(-one_of('aux', 'class'))
    
  } else {
    data <- predict_tp(serie, tp, sl, h) %>% 
      mutate(class_2 = factor(class)) %>% 
      select(-one_of('class'))
  }
  
  # Create Indicators
  .adx <- ADX(data[,c('high', 'low', 'close')], n = 14, maType = 'EMA') %>%
    as.data.frame() %>% setNames(c('dip', 'din', 'dx', 'adx'))
  
  .macd = MACD(data$close, maType = 'EMA') %>% as.data.frame() %>% 
    setNames(c('macd', 'macd_signal'))
  
  data %<>% cbind(.adx[,-3], .macd) %>% 
    mutate(lag_1 = close / lag(close) - 1,
           # lag_2 = close / lag(close, 2) - 1,
           lag_3 = close / lag(close, 3) - 1,
           # lag_4 = close / lag(close, 4) - 1,
           lag_5 = close / lag(close, 5) - 1,
           rsi = RSI(close, n = 14),
           ema_50 = SMA(close, n = 50),
           ema_13 = EMA(close, n = 13),
           # macd_hist = macd - macd_signal,
           bb_down = BBands(data[,c('high', 'low', 'close')], n = 14, sd = 2.5)[,1],
           bb_up = BBands(data[,c('high', 'low', 'close')], n = 14, sd = 2.5)[,3],
           atr = ATR(data[,c('high', 'low', 'close')], n = 14)[,2],
           sar = SAR(data[,c('high', 'low')])[,1]
    ) %>% 
    na.omit()
  
  # Split Data
  train <- data %>% filter(year(timestamp) %in% seq(2009, 2014, 1))
  
  test <- data %>% filter(year(timestamp) %in% c(2015, 2016))
  
  validation <- data %>% filter(year(timestamp) %in% c(2017, 2018))
  
  # Create Folds
  
  # Sample's
  .fold_S1 <- which(year(train$timestamp) %in% c(2009, 2010))
  .fold_S2 <- which(year(train$timestamp) %in% c(2010, 2011))
  .fold_S3 <- which(year(train$timestamp) %in% c(2011, 2012))
  .fold_S4 <- which(year(train$timestamp) %in% c(2012, 2013))
  
  # Held-Out's
  .fold_OS1 <- which(year(train$timestamp) == 2011)
  .fold_OS2 <- which(year(train$timestamp) == 2012)
  .fold_OS3 <- which(year(train$timestamp) == 2013)
  .fold_OS4 <- which(year(train$timestamp) == 2014)
  
  # Create list
  sampleFolds <- list(.fold_S1, .fold_S2, .fold_S3, .fold_S4)
  
  OsampleFolds <- list(.fold_OS1, .fold_OS2, .fold_OS3, .fold_OS4)
  
  # PCA Model
  
  .PCA_cntrl <- trainControl(index = sampleFolds,
                             indexOut = OsampleFolds,
                             classProbs = TRUE,
                             savePredictions = TRUE,
                             summaryFunction = twoClassSummary,
                             preProcOptions = list(thresh = 0.85) #thresh = 0.85,pcaComp = 3)
  )
  
  PCA_model <- train(class_2 ~ (.)^2 - close - high - low - open - macd - bb_down - bb_up - dip - din
                     - adx - macd_signal - lag_1 - lag_3 - lag_5 - rsi - ema_50
                     - atr - sar - ema_13,
                     data = train[,-1],
                     method = "glm",
                     family = 'binomial',
                     metric = 'ROC',
                     preProcess = c('pca'),
                     trControl = .PCA_cntrl
  )
  
  
  # Prediction
  PCA_pred <- predict(PCA_model, newdata = test[,-1], type = 'prob')
  
  cutoff <- getROC(PCA_pred, test)
  
  return(cutoff) 
  
}